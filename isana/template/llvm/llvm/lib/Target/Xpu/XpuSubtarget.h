//===-- {{ Xpu }}Subtarget.h - Define Subtarget for the {{ Xpu }} -*- C++ -*-===//

#ifndef LLVM_LIB_TARGET_{{ XPU }}_{{ XPU }}SUBTARGET_H
#define LLVM_LIB_TARGET_{{ XPU }}_{{ XPU }}SUBTARGET_H

#include "{{ Xpu }}FrameLowering.h"
#include "{{ Xpu }}ISelLowering.h"
#include "{{ Xpu }}InstrInfo.h"
#include "{{ Xpu }}RegisterInfo.h"
// #include "{{ Xpu }}SelectionDAGInfo.h"
#include "llvm/CodeGen/SelectionDAGTargetInfo.h"
#include "llvm/CodeGen/TargetSubtargetInfo.h"
#include "llvm/IR/DataLayout.h"
#include "llvm/Target/TargetMachine.h"

#define GET_SUBTARGETINFO_HEADER
#include "{{ Xpu }}GenSubtargetInfo.inc"

namespace llvm {
class StringRef;

class {{ Xpu }}Subtarget : public {{ Xpu }}GenSubtargetInfo {
  virtual void anchor();

#define GET_SUBTARGETINFO_MACRO(ATTRIBUTE, DEFAULT, GETTER) \
  bool ATTRIBUTE = DEFAULT;
#include "{{ Xpu }}GenSubtargetInfo.inc"

  {{ Xpu }}FrameLowering FrameLowering;
  {{ Xpu }}InstrInfo InstrInfo;
  {{ Xpu }}RegisterInfo RegInfo;
  {{ Xpu }}TargetLowering TLInfo;
  SelectionDAGTargetInfo TSInfo;  // {{ Xpu }}SelectionDAGInfo TSInfo;

protected:
  // bool Has64Bit;
  // bool HasBigEndian;

public:
  {{ Xpu }}Subtarget &initializeSubtargetDependencies(StringRef CPU, StringRef FS);

  // ParseSubtargetFeatures - Parses features string setting specified
  // subtarget options.  Definition of function is auto generated by tblgen.
  void ParseSubtargetFeatures(StringRef CPU, StringRef TuneCPU, StringRef FS);

  // This constructor initializes the data members to match that
  // of the specified triple.
  {{ Xpu }}Subtarget(const Triple &TT, StringRef CPU, StringRef FS,
               const TargetMachine &TM);

  const {{ Xpu }}InstrInfo *getInstrInfo() const override { return &InstrInfo; }
  const {{ Xpu }}FrameLowering *getFrameLowering() const override {
    return &FrameLowering;
  }
  const {{ Xpu }}TargetLowering *getTargetLowering() const override {
    return &TLInfo;
  }
  // const {{ Xpu }}SelectionDAGInfo *getSelectionDAGInfo() const override {
  const SelectionDAGTargetInfo *getSelectionDAGInfo() const override {
    return &TSInfo;
  }
  const {{ Xpu }}RegisterInfo *getRegisterInfo() const override {
    return &RegInfo;
  }

#define GET_SUBTARGETINFO_MACRO(ATTRIBUTE, DEFAULT, GETTER) \
  bool GETTER() const { return ATTRIBUTE; }
#include "{{ Xpu }}GenSubtargetInfo.inc"

  MVT getXLenVT() const {
    return Has64Bit ? MVT::i64 : MVT::i32;
  }
  unsigned getXLen() const {
    return Has64Bit ? 64 : 32;
  }
};
} // End llvm namespace

#endif
